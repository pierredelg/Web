/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-11-22 18:27:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.time.*;
import java.sql.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"ErrorPage.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Login</title>\n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("    \n");
      out.write("</head>\n");
      out.write("<body>\n");


    String urlPsql = config.getServletContext().getInitParameter("url");
    System.out.println(urlPsql);

    String nomPsql = config.getServletContext().getInitParameter("login");
    System.out.println(nomPsql);

    String mdpPsql = config.getServletContext().getInitParameter("mdp");
    System.out.println(mdpPsql);

    String driverPsql = config.getServletContext().getInitParameter("driver");
    System.out.println(driverPsql);

    String login = request.getParameter("login");
    System.out.println(login);
    String mdpUser = request.getParameter("mdp");
    System.out.println(mdpUser);


    Class.forName(driverPsql);
    Connection con = DriverManager.getConnection(urlPsql,nomPsql,mdpPsql);
    String query = "Select * from login where nom=? and mdp=?";
    PreparedStatement ps = con.prepareStatement(query);
    ps.setString(1,login);
    ps.setString(2,mdpUser);
    System.out.println(ps);

    ResultSet rs = ps.executeQuery();
    //Pr√©sent dans la base
    if(rs.next()) {
        Timestamp ts = rs.getTimestamp("dat");
        LocalDateTime dateBDD = null;
        if( ts != null ) {
            dateBDD = LocalDateTime.ofInstant(Instant.ofEpochMilli(ts.getTime()), ZoneOffset.UTC);
        }
        String ip = rs.getString("ip");

        String query2 = "update login set dat = ? where nom=(select nom from login where nom = ? and mdp= ? and ip= ?);";
        PreparedStatement ps2 = con.prepareStatement(query2);

        LocalDateTime localDateTime = LocalDateTime.now();
        Timestamp timestamp = new Timestamp(localDateTime.toInstant(ZoneOffset.UTC).toEpochMilli());
        ps2.setTimestamp(1,timestamp);
        ps2.setString(2, login);
        ps2.setString(3, mdpUser);
        ps2.setString(4, request.getRemoteAddr());
        System.out.println(ps2);

        ps2.executeUpdate();
        long seconds = 0;
        Duration duration;
        if(dateBDD != null) {
            duration = Duration.between(dateBDD, localDateTime);
             seconds = duration.getSeconds();
        }
        int MINUTES_PER_HOUR = 60;
        int SECONDS_PER_MINUTE = 60;
        int SECONDS_PER_HOUR = SECONDS_PER_MINUTE * MINUTES_PER_HOUR;
        long heures = seconds / SECONDS_PER_HOUR;
        long minutes = ((seconds % SECONDS_PER_HOUR) / SECONDS_PER_MINUTE);
        long secondes = (seconds % SECONDS_PER_MINUTE);



      out.write("\n");
      out.write("<p>Bonjour Mr ");
      out.print( login );
      out.write(", votre derniere connexion date de ");
      out.print( heures);
      out.write('>');
      out.write(':');
      out.print(minutes);
      out.write(':');
      out.print(secondes);
      out.write(" de la machine ");
      out.print( ip );
      out.write("</p>\n");
}
    //1ere connexion
    else{

      out.write("\n");
      out.write("<p>Bonjour Mr  ");
      out.print(login);
      out.write(", bienvenu sur ce site</p>\n");

        String query3 = "insert into login values( ?,?,?,?);";
        PreparedStatement ps3 = con.prepareStatement(query3);
        ps3.setString(1,login);
        ps3.setString(2,mdpUser);
        LocalDateTime localDateTime = LocalDateTime.now();
        Timestamp timestamp = new Timestamp(localDateTime.toInstant(ZoneOffset.UTC).toEpochMilli());
        ps3.setTimestamp(3,timestamp);
        ps3.setString(4,request.getRemoteAddr());
        System.out.println(ps3);
        ps3.executeUpdate();
    }
    con.close();

      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
